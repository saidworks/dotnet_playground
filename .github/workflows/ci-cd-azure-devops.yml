name: CI-CD via Azure DevOps

on:
  push:
    branches: [ "main" ]
    paths:
      - 'SZFunction/**'
      - '.github/workflows/**'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build .NET 9 app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        working-directory: SZFunction/SZFunction
        run: dotnet restore SZFunction.csproj

      - name: Build
        working-directory: SZFunction/SZFunction
        run: dotnet build SZFunction.csproj --configuration Release --no-restore

      - name: Publish
        working-directory: SZFunction/SZFunction
        run: dotnet publish SZFunction.csproj --configuration Release --no-build -o ./publish

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: szfunction_publish
          path: SZFunction/SZFunction/publish  
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Add this permission specifically for the deploy job
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: szfunction_publish
          path: publish

      - name: Azure Login
        uses: azure/login@v2
        with:
          # Choose ONE of these authentication methods
#          creds: ${{ secrets.AZURE_CREDENTIALS }} # Option 1: Using a service principal
          client-id: ${{ secrets.AZURE_CLIENT_ID }} # Option 2: Using managed identity
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      
      
      # ... existing code ...
      - name: Azure Login
        uses: azure/login@v2
        with:
          # Choose ONE of these authentication methods
          #          creds: ${{ secrets.AZURE_CREDENTIALS }} # Option 1: Using a service principal
          client-id: ${{ secrets.AZURE_CLIENT_ID }} # Option 2: Using managed identity
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      - name: Create Azure Web App if it doesn't exist
        uses: azure/CLI@v1
        with:
          inlineScript: |
            # Check if web app exists
            exists=$(az webapp show --name szlearn-szfunction --resource-group YOUR_RESOURCE_GROUP_NAME --query id --output tsv 2>/dev/null || echo "false")
            
            # Create web app if it doesn't exist
            if [ "$exists" == "false" ]; then
              echo "Creating Azure Web App 'szlearn-szfunction'..."
              az webapp create --name szlearn-szfunction \
                              --resource-group YOUR_RESOURCE_GROUP_NAME \
                              --plan YOUR_APP_SERVICE_PLAN_NAME \
                              --runtime "DOTNET:9.0"
            else
              echo "Azure Web App 'szlearn-szfunction' already exists."
            fi


      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'szlearn-szfunction'
          package: './publish'

